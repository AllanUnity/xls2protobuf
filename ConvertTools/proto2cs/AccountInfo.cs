// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Author: Jumbo 
// source: AccountInfo.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace JX {

  /// <summary>Holder for reflection information generated from AccountInfo.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class AccountInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for AccountInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFBY2NvdW50SW5mby5wcm90bxICSlgiGwoLQWNjb3VudEluZm8SDAoEbmFt",
            "ZRgBIAEoDCIzChFBY2NvdW50SW5mb19BUlJBWRIeCgVpdGVtcxgBIAMoCzIP",
            "LkpYLkFjY291bnRJbmZvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::JX.AccountInfo), global::JX.AccountInfo.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::JX.AccountInfo_ARRAY), global::JX.AccountInfo_ARRAY.Parser, new[]{ "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountInfo : pb::IMessage<AccountInfo> {
    private static readonly pb::MessageParser<AccountInfo> _parser = new pb::MessageParser<AccountInfo>(() => new AccountInfo());
    public static pb::MessageParser<AccountInfo> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::JX.AccountInfoReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public AccountInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    public AccountInfo(AccountInfo other) : this() {
      name_ = other.name_;
    }

    public AccountInfo Clone() {
      return new AccountInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private pb::ByteString name_ = pb::ByteString.Empty;
    /// <summary>
    /// * 姓名 
    /// </summary>
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as AccountInfo);
    }

    public bool Equals(AccountInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      return size;
    }

    public void MergeFrom(AccountInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountInfo_ARRAY : pb::IMessage<AccountInfo_ARRAY> {
    private static readonly pb::MessageParser<AccountInfo_ARRAY> _parser = new pb::MessageParser<AccountInfo_ARRAY>(() => new AccountInfo_ARRAY());
    public static pb::MessageParser<AccountInfo_ARRAY> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::JX.AccountInfoReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public AccountInfo_ARRAY() {
      OnConstruction();
    }

    partial void OnConstruction();

    public AccountInfo_ARRAY(AccountInfo_ARRAY other) : this() {
      items_ = other.items_.Clone();
    }

    public AccountInfo_ARRAY Clone() {
      return new AccountInfo_ARRAY(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JX.AccountInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::JX.AccountInfo.Parser);
    private readonly pbc::RepeatedField<global::JX.AccountInfo> items_ = new pbc::RepeatedField<global::JX.AccountInfo>();
    public pbc::RepeatedField<global::JX.AccountInfo> Items {
      get { return items_; }
    }

    public override bool Equals(object other) {
      return Equals(other as AccountInfo_ARRAY);
    }

    public bool Equals(AccountInfo_ARRAY other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      return size;
    }

    public void MergeFrom(AccountInfo_ARRAY other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
